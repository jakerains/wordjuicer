import { precacheAndRoute } from 'workbox-precaching';
import { registerRoute } from 'workbox-routing';
import { NetworkOnly, CacheFirst } from 'workbox-strategies';
import { ExpirationPlugin } from 'workbox-expiration';

// Precache all assets generated by your build process
precacheAndRoute(self.__WB_MANIFEST);

// API routes - NetworkOnly strategy
registerRoute(
  ({ url, request }) => {
    return request.method === 'POST' && (
      url.pathname.startsWith('/api') || 
      url.hostname === 'api-inference.huggingface.co' ||
      url.hostname === 'api.groq.com' ||
      url.hostname === 'api.openai.com'
    );
  },
  new NetworkOnly()
);

// Static assets - CacheFirst strategy
registerRoute(
  ({ request }) => request.destination === 'style' || 
                   request.destination === 'script' || 
                   request.destination === 'image',
  new CacheFirst({
    cacheName: 'static-resources',
    plugins: [
      new ExpirationPlugin({
        maxEntries: 60,
        maxAgeSeconds: 30 * 24 * 60 * 60, // 30 days
      }),
    ],
  })
);

// Handle navigation requests
registerRoute(
  ({ request }) => request.mode === 'navigate',
  new NetworkOnly()
);

self.addEventListener('install', (event) => {
  self.skipWaiting();
});

self.addEventListener('activate', (event) => {
  event.waitUntil(
    Promise.all([
      self.clients.claim(),
      // Clear old caches
      caches.keys().then((cacheNames) => {
        return Promise.all(
          cacheNames.map((cacheName) => {
            if (cacheName !== 'static-resources') {
              return caches.delete(cacheName);
            }
          })
        );
      })
    ])
  );
}); 